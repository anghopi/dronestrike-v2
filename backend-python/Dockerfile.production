# Multi-stage Production Dockerfile for DroneStrike v2 Backend
# Optimized for security, performance, and minimal attack surface

# Build stage
FROM python:3.11-slim as builder

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for build
RUN groupadd -r builduser && useradd --no-log-init -r -g builduser builduser

# Set work directory
WORKDIR /build

# Copy requirements first for better caching
COPY requirements.txt requirements-prod.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements-prod.txt

# Production stage
FROM python:3.11-slim as production

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    postgresql-client \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user
RUN groupadd -r dronestrike && \
    useradd --no-log-init -r -g dronestrike dronestrike && \
    mkdir -p /app /app/logs /app/uploads /app/temp /app/backups /app/keys && \
    chown -R dronestrike:dronestrike /app

# Set work directory
WORKDIR /app

# Copy Python packages from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code
COPY --chown=dronestrike:dronestrike . .

# Set directory permissions
RUN chmod -R 755 /app && \
    chmod -R 700 /app/keys && \
    chmod -R 755 /app/logs /app/uploads /app/temp /app/backups

# Create version file
RUN echo "2.0.0" > /app/VERSION && \
    echo "$(date -u +%Y-%m-%dT%H:%M:%SZ)" > /app/BUILD_TIME

# Health check script
COPY --chown=dronestrike:dronestrike scripts/health-check.sh /app/health-check.sh
RUN chmod +x /app/health-check.sh

# Switch to non-root user
USER dronestrike

# Environment variables
ENV PYTHONPATH=/app \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    ENVIRONMENT=production \
    PORT=8000

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD ./health-check.sh

# Default command
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4", "--access-log", "--no-use-colors"]

# Labels for metadata
LABEL maintainer="DroneStrike Team" \
      version="2.0.0" \
      description="DroneStrike v2 Backend - Production" \
      org.opencontainers.image.source="https://github.com/dronestrike/backend" \
      org.opencontainers.image.version="2.0.0" \
      org.opencontainers.image.created="$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
      org.opencontainers.image.title="DroneStrike Backend" \
      org.opencontainers.image.description="Production-ready DroneStrike backend API"