# Generated by Django 4.2.7 on 2025-06-26 20:05

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0006_tlcclient_tlctaxinfo_tlcpropertyvaluation_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('communication_type', models.CharField(choices=[('sms', 'SMS Campaign'), ('email', 'Email Campaign'), ('postcard', 'Postcard Campaign'), ('letter', 'Letter Campaign'), ('phone', 'Phone Campaign'), ('mixed', 'Mixed Media Campaign')], max_length=20)),
                ('campaign_type', models.CharField(choices=[('one_time', 'One Time'), ('drip', 'Drip Campaign'), ('triggered', 'Triggered'), ('a_b_test', 'A/B Test')], default='one_time', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('targeting_criteria', models.JSONField(blank=True, default=dict, help_text='Advanced targeting criteria')),
                ('configuration', models.JSONField(blank=True, default=dict, help_text='Campaign configuration like drip sequence, triggers, etc.')),
                ('scheduled_start', models.DateTimeField(blank=True, null=True)),
                ('scheduled_end', models.DateTimeField(blank=True, null=True)),
                ('max_tokens_budget', models.IntegerField(default=1000)),
                ('tokens_consumed', models.IntegerField(default=0)),
                ('max_recipients', models.IntegerField(blank=True, null=True)),
                ('total_sent', models.IntegerField(default=0)),
                ('total_failed', models.IntegerField(default=0)),
                ('total_delivered', models.IntegerField(default=0)),
                ('total_opened', models.IntegerField(default=0)),
                ('total_clicked', models.IntegerField(default=0)),
                ('total_replied', models.IntegerField(default=0)),
                ('total_unsubscribed', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True, help_text='Error message if campaign failed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='userprofile',
            name='allowed_counties',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='allowed_states',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='can_access_dangerous_properties',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='can_create_routes',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='can_override_business_hours',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='can_view_competitor_data',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='is_suspended',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='last_safety_decline',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='max_active_missions',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='max_daily_missions',
            field=models.IntegerField(default=10),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='max_devices',
            field=models.IntegerField(default=3),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='max_radius_miles',
            field=models.IntegerField(default=50),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='max_route_points',
            field=models.IntegerField(default=20),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='require_device_registration',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='role_flags',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='safety_decline_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='suspended_until',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='suspension_reason',
            field=models.TextField(blank=True),
        ),
        migrations.CreateModel(
            name='UserSecurityEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('login', 'User Login'), ('logout', 'User Logout'), ('failed_login', 'Failed Login'), ('permission_denied', 'Permission Denied'), ('role_changed', 'Role Changed'), ('suspended', 'User Suspended'), ('unsuspended', 'User Unsuspended'), ('safety_decline', 'Safety Decline'), ('mission_created', 'Mission Created'), ('mission_completed', 'Mission Completed')], max_length=20)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('device_id', models.CharField(blank=True, max_length=100)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='low', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='security_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_security_events',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EnhancedUserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_flags', models.IntegerField(default=1)),
                ('allowed_states', models.JSONField(blank=True, default=list)),
                ('allowed_counties', models.JSONField(blank=True, default=list)),
                ('max_radius_miles', models.IntegerField(default=50)),
                ('max_active_missions', models.IntegerField(default=1)),
                ('max_daily_missions', models.IntegerField(default=10)),
                ('can_create_routes', models.BooleanField(default=True)),
                ('max_route_points', models.IntegerField(default=20)),
                ('safety_decline_count', models.IntegerField(default=0)),
                ('is_suspended', models.BooleanField(default=False)),
                ('suspension_reason', models.TextField(blank=True)),
                ('suspended_until', models.DateTimeField(blank=True, null=True)),
                ('last_safety_decline', models.DateTimeField(blank=True, null=True)),
                ('max_devices', models.IntegerField(default=3)),
                ('require_device_registration', models.BooleanField(default=True)),
                ('can_access_dangerous_properties', models.BooleanField(default=False)),
                ('can_override_business_hours', models.BooleanField(default=False)),
                ('can_view_competitor_data', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_mission_at', models.DateTimeField(blank=True, null=True)),
                ('last_login_device', models.CharField(blank=True, max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='enhanced_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Enhanced User Profile',
                'verbose_name_plural': 'Enhanced User Profiles',
                'db_table': 'enhanced_user_profiles',
            },
        ),
        migrations.CreateModel(
            name='CommunicationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('communication_type', models.CharField(choices=[('sms', 'SMS Template'), ('email', 'Email Template'), ('postcard', 'Postcard Template'), ('letter', 'Letter Template'), ('phone', 'Phone Script Template')], max_length=20)),
                ('subject', models.CharField(blank=True, help_text='For emails', max_length=255)),
                ('content', models.TextField()),
                ('uses_variables', models.BooleanField(default=True)),
                ('available_variables', models.JSONField(blank=True, default=list, help_text='Available template variables')),
                ('times_used', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communication_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['communication_type', 'name'],
                'unique_together': {('user', 'name', 'communication_type')},
            },
        ),
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('phone', 'Phone Call'), ('sms', 'SMS Message'), ('email', 'Email'), ('mail', 'Physical Mail'), ('postcard', 'Postcard'), ('letter', 'Letter'), ('contract', 'Contract/Document'), ('meeting', 'In-Person Meeting'), ('other', 'Other')], max_length=20)),
                ('direction', models.CharField(choices=[('inbound', 'Inbound'), ('outbound', 'Outbound')], max_length=10)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read/Opened'), ('replied', 'Replied'), ('failed', 'Failed'), ('bounced', 'Bounced'), ('unsubscribed', 'Unsubscribed')], default='sent', max_length=15)),
                ('subject', models.CharField(blank=True, max_length=255)),
                ('content', models.TextField(blank=True)),
                ('duration_seconds', models.IntegerField(blank=True, help_text='Call duration in seconds', null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('email_address', models.EmailField(blank=True, max_length=254)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('response_received', models.BooleanField(default=False)),
                ('response_content', models.TextField(blank=True)),
                ('response_at', models.DateTimeField(blank=True, null=True)),
                ('failed_at', models.DateTimeField(blank=True, null=True)),
                ('bounce_reason', models.CharField(blank=True, max_length=255)),
                ('mailing_address', models.TextField(blank=True)),
                ('tracking_number', models.CharField(blank=True, max_length=100)),
                ('postmark_date', models.DateField(blank=True, null=True)),
                ('tokens_cost', models.IntegerField(default=0, help_text='Tokens consumed for this communication')),
                ('token_type', models.CharField(choices=[('regular', 'Regular Token'), ('mail', 'Mail Token')], default='regular', max_length=10)),
                ('external_id', models.CharField(blank=True, help_text='ID from external service (Twilio, SendGrid, etc.)', max_length=100)),
                ('external_status', models.CharField(blank=True, max_length=50)),
                ('external_error', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='communications', to='core.campaign')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communications', to='core.lead')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.communicationtemplate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CampaignRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read/Opened'), ('replied', 'Replied'), ('failed', 'Failed'), ('bounced', 'Bounced'), ('unsubscribed', 'Unsubscribed')], default='sent', max_length=20)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='core.campaign')),
                ('communication', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.communication')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.lead')),
            ],
        ),
        migrations.AddField(
            model_name='campaign',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.communicationtemplate'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CommunicationAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('sms_sent', models.IntegerField(default=0)),
                ('emails_sent', models.IntegerField(default=0)),
                ('mail_sent', models.IntegerField(default=0)),
                ('calls_made', models.IntegerField(default=0)),
                ('tokens_consumed', models.IntegerField(default=0)),
                ('mail_tokens_consumed', models.IntegerField(default=0)),
                ('responses_received', models.IntegerField(default=0)),
                ('appointments_scheduled', models.IntegerField(default=0)),
                ('total_communication_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communication_analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.AddIndex(
            model_name='communication',
            index=models.Index(fields=['user', 'type', 'created_at'], name='core_commun_user_id_c8fb48_idx'),
        ),
        migrations.AddIndex(
            model_name='communication',
            index=models.Index(fields=['lead', 'type'], name='core_commun_lead_id_cf6167_idx'),
        ),
        migrations.AddIndex(
            model_name='communication',
            index=models.Index(fields=['status', 'type'], name='core_commun_status_3c3380_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='campaignrecipient',
            unique_together={('campaign', 'lead')},
        ),
    ]
